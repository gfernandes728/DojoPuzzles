@model DojoPuzzles.Models.CollatzModels


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>Analisando a conjectura de Collatz</h2>
        <p>
            Para definir uma seqüência a partir de um número inteiro o positivo, temos as seguintes regras:
            <br />n → n/2 (n é par)
            <br />n → 3n + 1 (n é ímpar)
            <br />Usando a regra acima e iniciando com o número 13, geramos a seguinte seqüência:
            <br />13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1
            <br />Podemos ver que esta seqüência (iniciando em 13 e terminando em 1) contém 10 termos. Embora ainda não tenha sido provado (este problema é conhecido como Problema de Collatz), sabemos que com qualquer número que você começar, a seqüência resultante chega no número 1 em algum momento.
            <br />Desenvolva um programa que descubra qual o número inicial entre 1 e 1 milhão que produz a maior seqüência.
        </p>

        <hr />
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@{Html.RenderAction("collatz", "Collatz");}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
