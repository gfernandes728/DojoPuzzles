@model DojoPuzzles.Models.EncontreTelefoneModels


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h2>Encontre o telefone</h2>
        <p>
            Em alguns lugares é comum lembrar um número do telefone associando seus dígitos a letras. Dessa maneira a expressão MY LOVE significa 69 5683. Claro que existem alguns problemas, uma vez que alguns números de telefone não formam uma palavra ou uma frase e os dígitos 1 e 0 não estão associados a nenhuma letra.
            <br /><br /> Sua tarefa é ler uma expressão e encontrar o número de telefone correspondente baseado na tabela abaixo.Uma expressão é composta por letras maiúsculas(A-Z), hifens(-) e os números 1 e 0.
            <br /><br /> Letras  ->  Número
            <br /> ABC     ->  2
            <br /> DEF     ->  3
            <br /> GHI     ->  4
            <br /> JKL     ->  5
            <br /> MNO     ->  6
            <br /> PQRS    ->  7
            <br /> TUV     ->  8
            <br /> WXYZ    ->  9
            <br /><br /> Entrada:
            <br /> A entrada consiste de um conjunto de expressões.Cada expressão está sozinha em uma linha e possui C caracteres, onde 1 ≤ C ≤ 30. A entrada é terminada por fim de arquivo(EOF).
            <br /><br /> Saída:
            <br /> Para cada expressão você deve imprimir o número de telefone correspondente.
            <br /><br /> Exemplo de entrada:
            <br /> 1-HOME-SWEET-HOME
            <br /> MY-MISERABLE-JOB
            <br /><br /> Saída correspondente:
            <br /> 1-4663-79338-4663
            <br /> 69-647372253-562
            <br /><br /> Curiosidades:
            <br /> A frase "The quick brown fox jumps over the lazy dog" é um pangrama (frase com sentido em que são usadas todas as letras do alfabeto de determinada língua) da língua inglesa.
        </p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.codigo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.codigo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.codigo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@{Html.RenderAction("encontreTelefone", "EncontreTelefone");}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
